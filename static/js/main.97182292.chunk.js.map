{"version":3,"sources":["components/Card/card.component.jsx","components/card-list/card-list.compnent.jsx","components/searchBar/search-bar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","map","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","searchBox","target","value","state","fetch","then","response","json","users","this","filterMonster","length","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,gBAER,mCAAML,EAAMG,QAAQG,QACpB,mCAAMN,EAAMG,QAAQI,MAApB,WCRCC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,QAAQM,KAAI,SAACN,GAAD,OAEf,aADA,CACC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLtBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCPG,E,kDAvCX,aAAe,IAAD,8BACV,gBAWJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,UAAWF,EAAEG,OAAOC,SAXpC,EAAKC,MAAQ,CACTlB,QAAS,GACTe,UAAW,IAJL,E,qDAOd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEd,QAASuB,S,oBAKlD,WACI,IAAMvB,EAAUwB,KAAKN,MAAMlB,QACrBe,EAAYS,KAAKN,MAAMH,UACzBU,EAAgB,GASpB,OARIzB,EAAQ0B,OAAS,IACjBD,EAAgBzB,EAAQ2B,QAAO,SAAC3B,GAC5B,OAAOA,EAAQG,KACVyB,cACAC,SAASd,EAAUa,mBAIvB,sBACD9B,UAAY,MADX,UAEL,cACA,EADA,CACUU,YAAc,kBACxBC,aAAiBe,KAAKf,eACnB,IALE,IAKG,cACR,EADQ,CACCT,QAAYyB,EADb,eAC4C,IAN/C,W,GA5BCK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97182292.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n                alt=\"monster    \"\r\n            />\r\n            <h3> {props.monster.name}</h3>\r\n            <h4> {props.monster.email} </h4>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\nimport { Card } from \"../Card/card.component.jsx\";\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monster.map((monster) => (\r\n                // console.log(monster)\r\n                <Card key={monster.id} monster={monster}></Card>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-bar.style.css\";\r\n\r\nexport const SearchBar = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n","// @ts-nocheck\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.compnent\";\nimport { SearchBar } from \"./components/searchBar/search-bar.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monster: [],\n            searchBox: \"\",\n        };\n    }\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => response.json())\n            .then((users) => this.setState({ monster: users }));\n    }\n    handleChange = (e) => {\n        this.setState({ searchBox: e.target.value });\n    };\n    render() {\n        const monster = this.state.monster;\n        const searchBox = this.state.searchBox;\n        var filterMonster = [];\n        if (monster.length > 0) {\n            filterMonster = monster.filter((monster) => {\n                return monster.name\n                    .toLowerCase()\n                    .includes(searchBox.toLowerCase());\n            });\n        }\n\n        return ( <\n            div className = \"App\" >\n            <\n            SearchBar placeholder = \"search monsters\"\n            handleChange = { this.handleChange }\n            />{\" \"} <\n            CardList monster = { filterMonster } > < /CardList>{\" \"} <\n            /div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}